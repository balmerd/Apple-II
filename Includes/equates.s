
* SCREEN ADDRESSES

TXTPAGE1  EQU $400
TXTPAGE2  EQU $800
HGR1      EQU $2000 ; HI-RES PAGE 1
HGR2      EQU $4000 ; HI-RES PAGE 2

* SOFT SWITCHES

GRAPHICS  EQU $C050 ; GRAPHICS MODE
TEXTMODE  EQU $C051 ; TEXT MODE
FULLSCRN  EQU $C052 ; FULL TEXT OR GRAPHICS SCREEN
MIXED     EQU $C053 ; MIXED TEXT AND GRAPHICS
PAGE1     EQU $C054 ; PRIMARY PAGE
PAGE2     EQU $C055 ; SECONDARY PAGE
LORES     EQU $C056 ; LO-RES GRAPHICS
HIRES     EQU $C057 ; HI-RES GRAPHICS
PADDLE0   EQU $C064 ; READ PADDLE 0
TRIGGER   EQU $C070 ; PADDLE TRIGGER

BELL      EQU $FBDD ; RING THE BELL
CLRTXT    EQU $FC58 ; CLEAR TEXT SCREEN
CROUT1    EQU $FD8B ; CLEAR THE SCREEN FROM THE CURRENT CURSOR POSITION TO THE END OF THE TEXT WINDOW, THEN CALLS CROUT
CROUT     EQU $FD8E ; PRINT A RETURN CHARACTER
COUT1     EQU $FDF0 ; CHARACTER OUTPUT USING INVFLAG

* To output a number (BCD or HEX) that is greater than one byte, load the accumulator with the most-significant byte 
* and JSR HEXOUT. Repeat this for all the other bytes (the next most-significant byte down to the least-significant byte) 
* until the entire number is output.
*
PRBYTE    EQU $FDDA ; PRINT A HEX BYTE (destroys Accumulator)

PRHEX     EQU $FDE3 ; PRINT A HEX DIGIT (destroys Accumulator)
PRTAX     EQU $F941 ; PRINT A AND X IN HEX
PRBLNK    EQU $F94A ; PRINT n SPACES (X-REGISTER CONTAINS NUMBER OF CHARS, IF #$00 WILL PRINT 256)

READKBD   EQU $C000 ; READ KEYBOARD
RESETKBD  EQU $C010 ; RESET KEYBOARD
RDKEY     EQU $FD0C ; GET AN INPUT CHARACTER
RDCHAR    EQU $FD35 ; GET AN INPUT CHARACTER OR ESCAPE CODE

WAIT      EQU $FCA8 ; DELAY FOR NUMBER OF MS IN ACCUMULATOR (#$40 IS A 10 MS DELAY)
